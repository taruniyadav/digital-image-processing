import cv2
import numpy as np
def thres_finder(img,thres=20,delta_T=1.0):
    #step2:divide the images in two parts
    x_low,y_low=np.where(img<=thres)
    x_high,y_high=np.where(img>thres)
    
    #step3: find the mean of two parts
    mean_low=np.mean(img(x_low,y_low))
    mean_high=np.mean(img(x_high,y_high))
    
    #step4:calculate the new threshold
    new_thres=(mean_low+mean_high)/2
    
    #step5:stopping criteria,otherwise iterate
    if abs(new_thres-thres)<delta_T:
        return new_thres-thres
    else:
        return thres_finder(img,thres=new_thres,delta_T=1.0)
    
    #load an image in the greyscale
    img=cv2.imread("C:/7112/images.jfif",cv2.IMREAD_GRAYSCALE)
    
    #apply threshold finder
    vv1=thres_finder(img,thres=30,delta_T=1.0)
    
    #threshold the image
    ret,thresh=cv2.threshold(img,vv1,255,cv2.THRESH_BINARY)
    
    #display the image side by side
    out=cv2.hconcat([img,thresh])
    cv2.imshow('threshold',out)
    cv2.waitKey(0)
