#dft and inverse dft
import cv2
import numpy as np
#load the image and convert to grayscale
image = cv2.imread("C:/7112/image.jpeg")
gray = cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
#compute the discrete fourier transform of the image
#convert numpy array to float32
fourier = cv2.dft(np.float32(gray),flags = cv2.DFT_COMPLEX_OUTPUT)
#calculate the magnitude of the fourier transform
#take the log of absolute value as it has wide range
magnitude = 20*np.log(cv2.magnitude(fourier[:,:,0],fourier[:,:,1]))
#scale the magnitude for display
#constraint the range from 0 to 255
magnitude = cv2.normalize(magnitude,None,0,255,cv2.NORM_MINMAX,cv2.CV_8UC1)
#inverse DFT
idft = cv2.idft(fourier)
#calculate the magnitude of the inverse fourier transform
imag = 20*np.log(cv2.magnitude(idft[:,:,0],idft[:,:,1]))
#scale the magnitude for display
imagnorm = cv2.normalize(imag,None,0,255,cv2.NORM_MINMAX,cv2.CV_8UC1)
#display the magnitude of the fourier transform
cv2.imshow("original image",gray)
cv2.imshow("fourier tranform",magnitude)
cv2.imshow("magnitude spectrum",imagnorm)
cv2.waitKey(0)
cv2.destroyAllWindows()
